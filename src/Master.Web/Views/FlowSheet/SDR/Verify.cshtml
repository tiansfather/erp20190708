@using Master.Web.Components
@inherits Master.Web.Components.MasterRazorPage<TModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Master.Web.Core
@{
	ViewData["Title"] = "Index";
}

<div class="layui-fluid" id="LAY-app-message">
	<div class="layui-card">
		<div class="layui-card-body">
            <div class="LAY-app-message-btns" style="margin-bottom: 10px;">
                <vc:module-button module-key="SDRSheet"></vc:module-button>
                <button class="layui-btn  layui-btn-sm" type="button" buttonname="批量审核" modulekey="SDRSheet" params="" lay-event="Verify" confirmmsg="确认审核通过这些单据？" buttonactiontype="Ajax" buttonactionurl="abp.services.app.sDRSheet.verify" onclick="func.callModuleButtonEvent()">批量审核</button>
                <button class="layui-btn  layui-btn-sm layui-btn-normal" type="button" buttonname="批量审核" modulekey="SDRSheet" params="" lay-event="Cancel" confirmmsg="确认取消这些单据？" buttonactiontype="Ajax" buttonactionurl="abp.services.app.sDRSheet.cancel" onclick="func.callModuleButtonEvent()">批量取消</button>
            </div>
			<vc:module-table param="@(new ModuleTableViewParam() {ID="SDRSheet",ShowCheckbox=true,ModuleKey=nameof(Master.WorkFlow.Modules.SDRSheet),Height="full-100",Where="OrderStatus=\"待审核\"" })"></vc:module-table>
		</div>
		
	</div>
</div>

@section scripts{
	<script>
		//layui加载完成后调用此方法，
		config.ready = function () {
			var element = layui.element;

			config.refresh();
		}
		//当检索窗体提交后会调用此方法
		config.reloadTable = function () {
            layui.table.reload('SDRSheet', {
				where: getWhere()

			})
		}
		config.onTableDone = function () {

		}
		//当编辑或删除或添加表单提交后会调用此方法
        config.refresh = function () {
            
		}
		function getWhere() {
			var where = {};

            where.searchCondition = func.buildSearchCondition('SDRSheet');

			return where;

		}
	</script>
}