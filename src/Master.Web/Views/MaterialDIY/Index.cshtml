@using Master.Web.Components
@inherits Master.Web.Components.MasterRazorPage<TModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Master.Web.Core
@{
	ViewData["Title"] = "Index";
}

<div class="layui-fluid" id="LAY-app-message">
	<div class="layui-card">
		<div class="layui-card-body">

			<div class="layui-row">
				<div class="layui-col-xs2">
					<vc:base-tree param="@(new BaseTreeViewParam() { TreeKey="MaterialType",TreeName="商品分类",EnableAdd=false,EnableEdit=false,EnableDelete=false})"></vc:base-tree>

				</div>
				<div class="layui-col-xs10">
					<div class="LAY-app-message-btns" style="margin-bottom: 10px;">
						<vc:module-button module-key="MaterialDIY"></vc:module-button>
					</div>
					<vc:module-table param="@(new ModuleTableViewParam() {ID="MaterialDIY",ModuleKey="MaterialDIY",Height="full-110" })"></vc:module-table>
				</div>
			</div>


		</div>
	</div>
</div>

@section scripts{
	<script>
        var searchKeys = {};

		//layui加载完成后调用此方法，
		config.ready = function () {
			var element = layui.element;
			var table = layui.table;

			config.refresh();

			//监听树选中事件
			baseTree.onSelect = function (node) {
				searchKeys.MaterialTypeId = node.id;
				config.reloadTable();
			}
		}
		//当检索窗体提交后会调用此方法
		config.reloadTable = function () {
            layui.table.reload('MaterialDIY', {
				where: getWhere()

			})
		}
		config.onTableDone = function () {

		}
		//当编辑或删除或添加表单提交后会调用此方法
		config.refresh = function () {

		}
		function getWhere() {
			var where = { searchKeys: JSON.stringify(searchKeys) };
            where.searchCondition = func.buildSearchCondition('MaterialDIY');

			return where;

		}
	</script>
}