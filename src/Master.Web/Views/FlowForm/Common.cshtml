<style>
    .formPreview {
        border-top: 1px solid #e6e6e6;
        border-left: 1px solid #e6e6e6;
        overflow: hidden;
        margin: 10px;
        box-sizing: border-box;
        -moz-box-sizing: border-box; /* Firefox */
        -webkit-box-sizing: border-box; /* Safari */
    }

        .formPreview .layout {
            /*padding:2px;*/
        }

        .formPreview select {
            padding: 1px;
        }

        .formPreview .layout {
            border-right: 1px solid #e6e6e6;
            border-bottom: 1px solid #e6e6e6;
            box-sizing: border-box;
            -moz-box-sizing: border-box; /* Firefox */
            -webkit-box-sizing: border-box; /* Safari */
        }

        .formPreview .current {
            border: 2px dashed green !important;
        }
</style>
<script id="layOut" type="text/x-template">
    <div>
        <template v-for="(item,index) in list">
            <template v-if="!readonly">

                <div v-if="item.type=='layout'"
                     :formtips="item.tips"
                     :class="['layui-col-md'+item.span,'layout',{current:item.isCurrent}]"
                     :style="getStyle(item,'cbhtrm')">
                    <layout :list="item.children" :readonly="readonly"></layout>
                </div>
                <label v-if="item.type=='label'" :formtips="item.tips" :style="getStyle(item,'cb')" :class="{current:item.isCurrent}" v-html="item.text"></label>
                <input v-if="item.type=='input'" :rel="item.id" v-model="item.value" :formtips="item.tips" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent,notVerify:item.required&&!item.value}" />
                <input v-if="item.type=='date'" :rel="item.id" :id="'mydate'+item.id" v-model="item.value" :formtips="item.tips" :style="getStyle(item,'cbw')" class="mydate" :class="{current:item.isCurrent,notVerify:item.required&&!item.value}" />
                <select v-if="item.type=='select'" :rel="item.id" v-model="item.value" :formtips="item.tips" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent,notVerify:item.required&&!item.value}">
                    <option v-for="(option,optionIndex) in getOption(item.selectValues)" :value="option">{{option}}</option>
                </select>
                <label v-if="item.type=='radio'" :formtips="item.tips" v-for="(option,optionIndex) in getOption(item.selectValues)" style="margin-left:5px" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent,notVerify:item.required&&!item.value}">
                    <input type="radio" :rel="item.id" v-model="option" :title="option" :name="item.formName||'c'+item.id" :checked="item.value==option" />{{option}}
                </label>
                <label v-if="item.type=='checkbox'" :formtips="item.tips" v-for="(option,optionIndex) in getOption(item.selectValues)" style="margin-left:5px" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent,notVerify:item.required&&!item.value}">
                    <input type="checkbox" :rel="item.id" v-model="option" :title="option" :name="item.formName" :checked="item.value.indexOf(option)>=0" />{{option}}
                </label>
                <textarea v-if="item.type=='textarea'" :rel="item.id" :formtips="item.tips" :class="{current:item.isCurrent,notVerify:item.required&&!item.value}" :style="getStyle(item,'cbthw')" v-model="item.value"></textarea>
            </template>
            <template v-else>
                <div v-if="item.type=='layout'"
                     :class="['layui-col-md'+item.span,'layout',{current:item.isCurrent}]"
                     :style="getStyle(item,'cbhtrmp')">
                    <layout :list="item.children" :readonly="readonly"></layout>
                </div>
                <label v-if="item.type=='label'" :style="getStyle(item,'cb')" :class="{current:item.isCurrent}" v-html="item.text"></label>
                <input readonly="readonly" v-if="item.type=='input'" :rel="item.id" :value="item.value" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent}" />
                <input readonly="readonly" v-if="item.type=='date'" :rel="item.id" :id="'mydate'+item.id" :value="item.value" :style="getStyle(item,'cbw')" class="mydate" :class="{current:item.isCurrent}" />
                @*<span class="my-inb"  v-if="item.type=='select'" :rel="item.id" v-html="item.value" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent}"></span>*@
                <select v-if="item.type=='select'" :rel="item.id" :value="item.value" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent}">
                    <option v-for="(option,optionIndex) in getOption(item.selectValues)" :value="option" disabled="disabled">{{option}}</option>
                </select>
                <label v-if="item.type=='radio'" v-for="(option,optionIndex) in getOption(item.selectValues)" style="margin-left:5px" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent}">
                    @*<span v-if="item.value==option" :rel="item.id" :value="option" :title="option" :name="item.formName||'c'+item.id">{{option}}</span>*@
                    <input type="radio" disabled="disabled" :rel="item.id" :value="option" :title="option" :name="item.formName||'c'+item.id" :checked="item.value==option" />{{option}}
                </label>
                <label v-if="item.type=='checkbox'" v-for="(option,optionIndex) in getOption(item.selectValues)" style="margin-left:5px" :style="getStyle(item,'cbw')" :class="{current:item.isCurrent}">
                    @*<span  :rel="item.id" v-html="option" :title="option" :name="item.formName" v-if="item.value.indexOf(option)>=0" ></span>*@
                    <input disabled="disabled" type="checkbox" :rel="item.id" :value="option" :title="option" :name="item.formName" :checked="item.value.indexOf(option)>=0" />{{option}}
                </label>
                <textarea readonly="readonly" v-if="item.type=='textarea'" :rel="item.id" :class="{current:item.isCurrent}" :style="getStyle(item,'cbthw')" :value="item.value"></textarea>
            </template>
        </template>
    </div>
</script>
<script>
    Vue.component('layout', {
        template: '#layOut',
        //+'<div v-if="item.type==\'layout\'" :class="\'layui-col-md\'+item.span"></div>'+

        props: ['list', 'readonly'],
        data: function () {
            return {

            }
        },
        methods: {
            getHeight: function (height) {
                return height.indexOf('px') != -1 ? height : (height < 21 ? height : 20) * 30 + 'px'
            },
            getStyle: function (item, str) {
                var reData = {};
                var o2o = {
                    c: 'color',
                    b: 'background',
                    t: 'text-align',
                    h: 'height',
                    p: 'padding',
                    r: 'border-right',
                    m: 'border-bottom',
                    w: 'width'
                }
                var obj = {
                    color: item.color,
                    background: item.background,
                    'text-align': item.align,
                    height: this.getHeight(item.height),
                    padding: this.getPadding(item),
                    'border-right': this.hasChildLayout(item) ? '0' : '1px solid #e6e6e6',
                    'border-bottom': this.hasChildLayout(item) ? '0' : '1px solid #e6e6e6',
                    width: item.width
                }
                str.split('').forEach(function (char) {
                    var key = o2o[char];
                    reData[key] = obj[key];
                })
                return reData;
            },
            getOption: function (selectValue) {
                var result = [];
                if (selectValue) {
                    result = selectValue.split(',');
                }
                return result;
            },
            getPadding: function (item) {
                if (this.hasChildLayout(item)) {
                    return "0";
                } else {
                    return item.padding || "3px";
                }

            },
            hasChildLayout: function (item) {
                return item.children ? item.children.filter(function (o) { return o.type == 'layout'; }).length > 0 : false;
            }
        }
    });
</script>