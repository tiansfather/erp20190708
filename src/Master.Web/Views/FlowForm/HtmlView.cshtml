@using Master.Web.Components
@inherits Master.Web.Components.MasterRazorPage<TModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Master.Web.Core
@{
    Layout = "~/Views/Shared/_LayoutDialog.cshtml";
    ViewData["Title"] = "单据查看";
}
<style>
    @@page {
        size: auto;
        margin: 0mm;
    }

    @@media screen and (max-width: 480px) {
        .layui-table {
            word-break: keep-all;
        }
    }

    @@media screen{
        #print{
            display:none;
        }
    }
    @@media print{
        #header,#normal{
            display:none;
        }
    }
</style>
<style>
    .red{
        color:red !important;
    }
    .el-form-item{
        min-width:280px;
    }
    .el-form-item__label{
        text-align:left !important;
    }
    html #print{
        font-size: 14px;
        font-family: '微软雅黑 Bold', '微软雅黑';
        width:880px;
    }

    #print * {
        margin: 0 auto;
        padding: 0;
        box-sizing: border-box;
    }

    #print button {
        cursor: pointer
    }

    #print ul,
    #print li {
        padding: 0;
        margin: 0;
        list-style: none
    }

    #print h1 {
        margin: 25px 0;
        font-family: '微软雅黑 Bold', '微软雅黑';
        font-weight: 700;
        font-style: normal;
        font-size: 24px;
        text-align: center;
    }

    #print #table1,
    #print #table2 {
        width: 100%
    }

   #print  #table1 {
        margin-bottom: 15px;
    }
   
   #print #table1 td {
            line-height: 30px;
        }

    #print #table2 td {
        height: 2.5em;
        line-height: 2.5em;
    }

    #print table#table2 {
        border-collapse: collapse;
        border: 1px solid #69899F;
    }

    #print  table#table2 td {
            border: 1px solid #000000;
            padding:0 3px;
        }

    #print  table#table2 td:first-child {
                border-left: 0px solid #000000;
            }

    #print #table1 .weight-font {
        text-align: right;
        width: 8em;
    }

   #print  .weight-font {
        font-weight: 700;
    }

   #print .content-left {
        margin: 0;
        margin-right: 80px;
    }

   #print  .content-right {
        width: 14px;
        font-size: 14px;
        word-wrap: break-word;
        float: right;
        margin-right:30px;
    }

    #print .total-wrap {
        border-bottom: 1px solid #000;
        line-height: 3.5;
        padding: 0 5px;
    }

    #print .sign {
        border: none;
    }

    #print  .sign > span {
            display: inline-block;
            width: 47%;
        }

   #print .tx-c {
        text-align: center;
    }

   #print .tx-r {
        text-align: right;
    }
   #print .tx-c {
        text-align: center;
    }

   #print .tx-l {
        text-align: left;
    }
</style>

<script>
    var sheetId = $.getUrlParam("sheetId")||'@ViewBag.SheetId';
    var _formOption = {
        readonly: true,
        formData:@Html.Raw(ViewBag.FormData),
        mode: "@ViewBag.Mode",
        orderStatus:"@Html.Raw(ViewBag.OrderStatus)",
    };
</script>
<div style="padding:20px">
    <div id="header" v-cloak v-if="sheetId && _formOption.mode!='print'">
        <el-form :inline="true" size="mini" :disabled="true" label-width="120px" label-position="left">
            <el-form-item label="单号:">
                {{sheetInfo.sheetSN}}
                @*<el-input v-model="sheetInfo.sheetSN" readonly="true"></el-input>*@
            </el-form-item>
            <el-form-item label="录单日期:">
                {{sheetInfo.creationTime}}
                @*<el-input v-model="sheetInfo.creationTime" readonly="true"></el-input>*@
            </el-form-item>
            <el-form-item label="经办人:">
                {{sheetInfo.creatorUserName}}
                @*<el-input v-model="sheetInfo.creatorUserName" readonly="true"></el-input>*@
            </el-form-item>
            @*<el-form-item label="单据性质">
                    <el-input v-model="sheetInfo.sheetNatureName" readonly="true"></el-input>
                </el-form-item>*@
            <el-form-item label="单据状态:">
                {{orderStatusName}}
                @*<el-input v-model="orderStatusName" readonly="true"></el-input>*@
            </el-form-item>
            <el-form-item label="对应单号:" v-if="sheetInfo.sheetNature==1 || sheetInfo.sheetNature==2">
                {{sheetInfo.relSheetSN}}
                @*<el-input v-model="sheetInfo.relSheetSN" readonly="true"></el-input>*@
            </el-form-item>
            <el-form-item label="冲红原因:" v-if="sheetInfo.sheetNature==1 || sheetInfo.sheetNature==2">
                {{sheetInfo.revertReason}}
                @*<el-input v-model="sheetInfo.revertReason" readonly="true"></el-input>*@
            </el-form-item>
        </el-form>
        <div style="text-align:right">
            <button type="button" v-for="(btn,index) in filterBtn(sheetInfo.btns)" class="layui-btn layui-btn-sm" :class="btn.buttonClass" @@click="action(btn)">{{btn.buttonName}}</button>
        </div>

        @*<button type="button" class="layui-btn layui-btn-danger" v-if="sheetInfo.sheetNature==0" style="float:right" @@click="revertSheet">冲红</button>*@
        <hr>
    </div>
    <div id="content">
        @Html.Raw(ViewBag.FormContent)
    </div>
</div>


<script>
    config.readyFuncs.push(function () {
        window.header = new Vue({
            el: '#header',
            data: {
                sheetInfo: {}
            },
            computed: {
                orderStatusName: function () {
                    if (this.sheetInfo.sheetNature == 1 || this.sheetInfo.sheetNature == 2) {
                        return this.sheetInfo.sheetNatureName;
                    } else {
                        return this.sheetInfo.orderStatus || '正单';
                    }
                }
            },
            methods: {
                filterBtn: function (btns) {
                    btns = btns || [];
                    //只读模式下只允许打印或冲红
                    if (_formOption.mode == "readonly") {
                        btns = btns.filter(function (o) { return o.buttonKey == 'print' || o.buttonKey == 'revert' });
                    }
                    return btns;
                },
                revertSheet: function () {
                    abp.message.confirm("确认冲红此单据?", function () {
                        layer.prompt({
                            formType: 2,
                            value: '',
                            title: '请输入冲红原因',
                            //area: ['800px', '350px'] //自定义文本域宽高
                        }, function (value, index, elem) {
                            func.runAsync(abp.services.app.flowSheet.revert(sheetId, value).done(function () {
                                parent.layer.msg("冲红成功");
                                parent.config.reloadTable();
                                parent.layer.closeAll('iframe');
                            }))
                            layer.close(index);
                        });
                    })
                },
                action: function (btn) {
                    if (btn.buttonKey == "print") {
                        window.print();
                        //window.open('/FlowSheet/SheetView?data=' + sheetId + "&mode=print");
                        return;
                    }
                    var confirmMsg = btn.confirmMsg || '确认提交?';
                    abp.message.confirm(confirmMsg, function () {
                        if (btn.buttonKey == "revert") {
                            layer.prompt({
                                formType: 2,
                                value: '',
                                title: '请输入冲红原因',
                                //area: ['800px', '350px'] //自定义文本域宽高
                            }, function (value, index, elem) {
                                func.runAsync(abp.services.app.flowSheet.revert(sheetId, value).done(function () {
                                    parent.layer.msg("冲红成功");
                                    parent.config.reloadTable();
                                    parent.layer.closeAll('iframe');
                                }))
                                layer.close(index);
                            });
                        }
                        else {
                            func.runAsync(abp.services.app.flowSheet.action({ sheetId: sheetId, actionName: btn.buttonKey, formData: JSON.stringify(getFormData()) }).done(function () {
                                parent.layer.msg("提交成功");
                                parent.config.reloadTable();
                                parent.layer.closeAll('iframe');
                            }))
                        }

                    })
                }
            },
            mounted: function () {
                var that = this;
                if (sheetId) {
                    abp.services.app.flowSheet.getById(sheetId).done(function (data) {
                        that.sheetInfo = data;
                        _formOption.sheetInfo = data;
                        app.sheetInfo = data;
                        _formOption.mode == 'print' && Vue.nextTick(window.print);

                        if (data.sheetNature == 1 || data.sheetNature == 2) {
                            $("#content,#header").addClass("red");
                        }
                    })
                }

            }
        })
    })

</script>