/* This file is automatically generated by ABP framework to use MVC Controllers from JavaScript. */

var abp = abp || {};
abp.services = abp.services || {};

// module 'app'
(function(){

  abp.services.app = abp.services.app || {};

  // controller 'file'
  (function(){

    abp.services.app.file = abp.services.app.file || {};

    // action 'uploadByContent'
    abp.services.app.file.uploadByContent = function(html, filePath, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'File/UploadByContent' + abp.utils.buildQueryString([{ name: 'filePath', value: filePath }]) + '',
        type: 'POST',
        data: JSON.stringify(html)
      }, ajaxParams));;
    };

    // action 'thumb'
    abp.services.app.file.thumb = function(fileid, w, h, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'File/Thumb/{fileId}' + abp.utils.buildQueryString([{ name: 'w', value: w }, { name: 'h', value: h }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.file.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.file.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.file.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.file.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.file.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.file.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.file.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.file.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.file.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.file.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.file.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.file.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'tokenAuth'
  (function(){

    abp.services.app.tokenAuth = abp.services.app.tokenAuth || {};

    // action 'authenticate'
    abp.services.app.tokenAuth.authenticate = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Authenticate' + abp.utils.buildQueryString([{ name: 'userName', value: model.userName }, { name: 'password', value: model.password }, { name: 'tenancyName', value: model.tenancyName }, { name: 'verifyCode', value: model.verifyCode }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getExternalAuthenticationProviders'
    abp.services.app.tokenAuth.getExternalAuthenticationProviders = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/GetExternalAuthenticationProviders',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'externalAuthenticate'
    abp.services.app.tokenAuth.externalAuthenticate = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/ExternalAuthenticate' + abp.utils.buildQueryString([{ name: 'authProvider', value: model.authProvider }, { name: 'providerKey', value: model.providerKey }, { name: 'providerAccessCode', value: model.providerAccessCode }, { name: 'clientInfo', value: model.clientInfo }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'error'
    abp.services.app.tokenAuth.error = function(msg, detail, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Error' + abp.utils.buildQueryString([{ name: 'msg', value: msg }, { name: 'detail', value: detail }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'success'
    abp.services.app.tokenAuth.success = function(msg, detail, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Success' + abp.utils.buildQueryString([{ name: 'msg', value: msg }, { name: 'detail', value: detail }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'qRCode'
  (function(){

    abp.services.app.qRCode = abp.services.app.qRCode || {};

    // action 'getQRCode'
    abp.services.app.qRCode.getQRCode = function(url, pixel, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/qrcode' + abp.utils.buildQueryString([{ name: 'url', value: url }, { name: 'pixel', value: pixel }]) + '',
        type: 'GET',
        dataType: null
      }, ajaxParams));;
    };

  })();

  // controller 'permission'
  (function(){

    abp.services.app.permission = abp.services.app.permission || {};

    // action 'getAllGrantedPermissions'
    abp.services.app.permission.getAllGrantedPermissions = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/GetAllGrantedPermissions',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'assignAllMenuPermission'
    abp.services.app.permission.assignAllMenuPermission = function(type, permissionNames, id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/AssignAllMenuPermission' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'id', value: id }]) + '',
        type: 'POST',
        data: JSON.stringify(permissionNames)
      }, ajaxParams));;
    };

    // action 'loadGrantedMenuPermissions'
    abp.services.app.permission.loadGrantedMenuPermissions = function(type, id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/LoadGrantedMenuPermissions' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'id', value: id }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'assignPermission'
    abp.services.app.permission.assignPermission = function(type, permissionName, id, isGranted, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/AssignPermission' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'permissionName', value: permissionName }, { name: 'id', value: id }, { name: 'isGranted', value: isGranted }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getMenuDetailPermissions'
    abp.services.app.permission.getMenuDetailPermissions = function(type, id, menu, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/GetMenuDetailPermissions' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'id', value: id }, { name: 'menu', value: menu }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delUserPermissions'
    abp.services.app.permission.delUserPermissions = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/DelUserPermissions' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'grantAllPermissions'
    abp.services.app.permission.grantAllPermissions = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/GrantAllPermissions' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'home'
  (function(){

    abp.services.app.home = abp.services.app.home || {};

    // action 'getSummary'
    abp.services.app.home.getSummary = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Home/GetSummary',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'test'
  (function(){

    abp.services.app.test = abp.services.app.test || {};

    // action 'get'
    abp.services.app.test.get = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/Get',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.test.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.test.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.test.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.test.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.test.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.test.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.test.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.test.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.test.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.test.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.test.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.test.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Test/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'flowSheet'
  (function(){

    abp.services.app.flowSheet = abp.services.app.flowSheet || {};

    // action 'getById'
    abp.services.app.flowSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'revert'
    abp.services.app.flowSheet.revert = function(sheetId, revertReason, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/Revert' + abp.utils.buildQueryString([{ name: 'sheetId', value: sheetId }, { name: 'revertReason', value: revertReason }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'action'
    abp.services.app.flowSheet.action = function(flowSheetActionDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/Action',
        type: 'POST',
        data: JSON.stringify(flowSheetActionDto)
      }, ajaxParams));;
    };

    // action 'getFlowBtns'
    abp.services.app.flowSheet.getFlowBtns = function(sheetId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetFlowBtns' + abp.utils.buildQueryString([{ name: 'sheetId', value: sheetId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.flowSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.flowSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.flowSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.flowSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.flowSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.flowSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.flowSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.flowSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.flowSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.flowSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.flowSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'flowForm'
  (function(){

    abp.services.app.flowForm = abp.services.app.flowForm || {};

    // action 'getAll'
    abp.services.app.flowForm.getAll = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetAll',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFormDesigner'
    abp.services.app.flowForm.getFormDesigner = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetFormDesigner' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'submitFormDesigner'
    abp.services.app.flowForm.submitFormDesigner = function(formDesignerDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/SubmitFormDesigner',
        type: 'POST',
        data: JSON.stringify(formDesignerDto)
      }, ajaxParams));;
    };

    // action 'getFormHtml'
    abp.services.app.flowForm.getFormHtml = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetFormHtml' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'submitFormHtml'
    abp.services.app.flowForm.submitFormHtml = function(formHtmlDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/SubmitFormHtml',
        type: 'POST',
        data: JSON.stringify(formHtmlDto)
      }, ajaxParams));;
    };

    // action 'getFormHandler'
    abp.services.app.flowForm.getFormHandler = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetFormHandler' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'submitFormHandler'
    abp.services.app.flowForm.submitFormHandler = function(formHtmlDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/SubmitFormHandler',
        type: 'POST',
        data: JSON.stringify(formHtmlDto)
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.flowForm.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'initDefaultForm'
    abp.services.app.flowForm.initDefaultForm = function(tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/InitDefaultForm' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.flowForm.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.flowForm.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.flowForm.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.flowForm.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.flowForm.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.flowForm.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.flowForm.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.flowForm.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.flowForm.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.flowForm.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.flowForm.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowForm/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'flowInstance'
  (function(){

    abp.services.app.flowInstance = abp.services.app.flowInstance || {};

    // action 'createInstance'
    abp.services.app.flowInstance.createInstance = function(flowInstanceCreateDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/CreateInstance',
        type: 'POST',
        data: JSON.stringify(flowInstanceCreateDto)
      }, ajaxParams));;
    };

    // action 'repostInstance'
    abp.services.app.flowInstance.repostInstance = function(flowInstanceRepostDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/RepostInstance',
        type: 'POST',
        data: JSON.stringify(flowInstanceRepostDto)
      }, ajaxParams));;
    };

    // action 'nodeVerification'
    abp.services.app.flowInstance.nodeVerification = function(instanceId, tag, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/NodeVerification' + abp.utils.buildQueryString([{ name: 'instanceId', value: instanceId }]) + '',
        type: 'POST',
        data: JSON.stringify(tag)
      }, ajaxParams));;
    };

    // action 'nodeReject'
    abp.services.app.flowInstance.nodeReject = function(reqest, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/NodeReject',
        type: 'POST',
        data: JSON.stringify(reqest)
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.flowInstance.get = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/Get' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'verification'
    abp.services.app.flowInstance.verification = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/Verification',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.flowInstance.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.flowInstance.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.flowInstance.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.flowInstance.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.flowInstance.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.flowInstance.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.flowInstance.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.flowInstance.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.flowInstance.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.flowInstance.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.flowInstance.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.flowInstance.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowInstance/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'flowScheme'
  (function(){

    abp.services.app.flowScheme = abp.services.app.flowScheme || {};

    // action 'getAvailableFlowSchemes'
    abp.services.app.flowScheme.getAvailableFlowSchemes = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetAvailableFlowSchemes',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.flowScheme.get = function(schemeId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/Get' + abp.utils.buildQueryString([{ name: 'schemeId', value: schemeId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.flowScheme.update = function(flowSchemeDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/Update',
        type: 'PUT',
        data: JSON.stringify(flowSchemeDto)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.flowScheme.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.flowScheme.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.flowScheme.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.flowScheme.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.flowScheme.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.flowScheme.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.flowScheme.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.flowScheme.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.flowScheme.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.flowScheme.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.flowScheme.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.flowScheme.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowScheme/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'user'
  (function(){

    abp.services.app.user = abp.services.app.user || {};

    // action 'formSubmit'
    abp.services.app.user.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.user.get = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Get',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSimplePageResult'
    abp.services.app.user.getSimplePageResult = function(requestPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetSimplePageResult' + abp.utils.buildQueryString([{ name: 'page', value: requestPageDto.page }, { name: 'limit', value: requestPageDto.limit }, { name: 'where', value: requestPageDto.where }, { name: 'tableFilter', value: requestPageDto.tableFilter }, { name: 'filterField', value: requestPageDto.filterField }, { name: 'filterKey', value: requestPageDto.filterKey }, { name: 'filterColumns', value: requestPageDto.filterColumns }, { name: 'searchCondition', value: requestPageDto.searchCondition }, { name: 'filterSos', value: requestPageDto.filterSos }, { name: 'searchKeys', value: requestPageDto.searchKeys }, { name: 'keyword', value: requestPageDto.keyword }, { name: 'orderField', value: requestPageDto.orderField }, { name: 'orderType', value: requestPageDto.orderType }, { name: 'searchKeyDic', value: requestPageDto.searchKeyDic }, { name: 'moduleKey', value: requestPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getCountSummary'
    abp.services.app.user.getCountSummary = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetCountSummary',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'changePassword'
    abp.services.app.user.changePassword = function(oriPassword, newPassword, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/ChangePassword' + abp.utils.buildQueryString([{ name: 'oriPassword', value: oriPassword }, { name: 'newPassword', value: newPassword }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getLoginProviders'
    abp.services.app.user.getLoginProviders = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetLoginProviders',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBindedLoginProviders'
    abp.services.app.user.getBindedLoginProviders = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetBindedLoginProviders' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'unBindLogin'
    abp.services.app.user.unBindLogin = function(provider, userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/UnBindLogin' + abp.utils.buildQueryString([{ name: 'provider', value: provider }, { name: 'userId', value: userId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'removeFromRole'
    abp.services.app.user.removeFromRole = function(userId, roleId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/RemoveFromRole' + abp.utils.buildQueryString([{ name: 'userId', value: userId }, { name: 'roleId', value: roleId }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'moveIntoRole'
    abp.services.app.user.moveIntoRole = function(userIds, roleId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/MoveIntoRole' + abp.utils.buildQueryString([{ name: 'roleId', value: roleId }]) + '',
        type: 'POST',
        data: JSON.stringify(userIds)
      }, ajaxParams));;
    };

    // action 'externalUserRegister'
    abp.services.app.user.externalUserRegister = function(externalUserRegisterDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/ExternalUserRegister',
        type: 'POST',
        data: JSON.stringify(externalUserRegisterDto)
      }, ajaxParams));;
    };

    // action 'getUserInfoByName'
    abp.services.app.user.getUserInfoByName = function(name, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserInfoByName' + abp.utils.buildQueryString([{ name: 'name', value: name }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setSignature'
    abp.services.app.user.setSignature = function(signature, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetSignature' + abp.utils.buildQueryString([{ name: 'signature', value: signature }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getCurrentToken'
    abp.services.app.user.getCurrentToken = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetCurrentToken',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.user.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.user.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.user.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.user.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.user.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.user.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.user.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.user.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.user.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.user.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.user.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'unit'
  (function(){

    abp.services.app.unit = abp.services.app.unit || {};

    // action 'getAll'
    abp.services.app.unit.getAll = function(key, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetAll' + abp.utils.buildQueryString([{ name: 'key', value: key }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByUnitNature'
    abp.services.app.unit.getAllByUnitNature = function(unitNature, key, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetAllByUnitNature' + abp.utils.buildQueryString([{ name: 'unitNature', value: unitNature }, { name: 'key', value: key }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getInvoice'
    abp.services.app.unit.getInvoice = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetInvoice' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'submitInvoice'
    abp.services.app.unit.submitInvoice = function(id, unitInvoice, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/SubmitInvoice' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'POST',
        data: JSON.stringify(unitInvoice)
      }, ajaxParams));;
    };

    // action 'getInvoiceDetail'
    abp.services.app.unit.getInvoiceDetail = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetInvoiceDetail' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAccountInfo'
    abp.services.app.unit.getAccountInfo = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetAccountInfo' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'submitAccountInfo'
    abp.services.app.unit.submitAccountInfo = function(id, userName, password, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/SubmitAccountInfo' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'userName', value: userName }, { name: 'password', value: password }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.unit.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.unit.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.unit.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.unit.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.unit.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.unit.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.unit.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.unit.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.unit.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.unit.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.unit.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.unit.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Unit/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'tenant'
  (function(){

    abp.services.app.tenant = abp.services.app.tenant || {};

    // action 'setTenantLogo'
    abp.services.app.tenant.setTenantLogo = function(logo, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetTenantLogo' + abp.utils.buildQueryString([{ name: 'logo', value: logo }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setEdition'
    abp.services.app.tenant.setEdition = function(tenantId, editionId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetEdition' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }, { name: 'editionId', value: editionId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setActive'
    abp.services.app.tenant.setActive = function(tenantId, isActive, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetActive' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }, { name: 'isActive', value: isActive }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'initModule'
    abp.services.app.tenant.initModule = function(ids, addOn, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/InitModule' + abp.utils.buildQueryString([{ name: 'addOn', value: addOn }]) + '',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'initAdminRole'
    abp.services.app.tenant.initAdminRole = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/InitAdminRole',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.tenant.updateField = function(tenantId, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/UpdateField' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.tenant.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.tenant.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.tenant.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.tenant.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.tenant.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.tenant.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.tenant.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.tenant.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.tenant.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.tenant.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.tenant.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.tenant.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'template'
  (function(){

    abp.services.app.template = abp.services.app.template || {};

    // action 'getTemplates'
    abp.services.app.template.getTemplates = function(templateType, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetTemplates' + abp.utils.buildQueryString([{ name: 'templateType', value: templateType }, { name: 'tenantId', value: tenantId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addTemplate'
    abp.services.app.template.addTemplate = function(templateDto, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/AddTemplate' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'POST',
        data: JSON.stringify(templateDto)
      }, ajaxParams));;
    };

    // action 'delTemplate'
    abp.services.app.template.delTemplate = function(templateId, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/DelTemplate' + abp.utils.buildQueryString([{ name: 'templateId', value: templateId }, { name: 'tenantId', value: tenantId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateTemplate'
    abp.services.app.template.updateTemplate = function(templateDto, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/UpdateTemplate' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'PUT',
        data: JSON.stringify(templateDto)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.template.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.template.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.template.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.template.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.template.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.template.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.template.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.template.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.template.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.template.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.template.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.template.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'setting'
  (function(){

    abp.services.app.setting = abp.services.app.setting || {};

    // action 'updateSettingsForTenant'
    abp.services.app.setting.updateSettingsForTenant = function(settingDtos, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Setting/UpdateSettingsForTenant',
        type: 'PUT',
        data: JSON.stringify(settingDtos)
      }, ajaxParams));;
    };

  })();

  // controller 'session'
  (function(){

    abp.services.app.session = abp.services.app.session || {};

    // action 'getCurrentLoginInformations'
    abp.services.app.session.getCurrentLoginInformations = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Session/GetCurrentLoginInformations',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'checkPassword'
    abp.services.app.session.checkPassword = function(password, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Session/CheckPassword' + abp.utils.buildQueryString([{ name: 'password', value: password }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'role'
  (function(){

    abp.services.app.role = abp.services.app.role || {};

    // action 'addRole'
    abp.services.app.role.addRole = function(name, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/AddRole' + abp.utils.buildQueryString([{ name: 'name', value: name }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'editRole'
    abp.services.app.role.editRole = function(id, name, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/EditRole' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'name', value: name }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.role.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.role.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getTenantRoles'
    abp.services.app.role.getTenantRoles = function(tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetTenantRoles' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.role.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.role.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.role.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.role.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.role.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.role.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.role.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.role.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.role.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.role.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'resource'
  (function(){

    abp.services.app.resource = abp.services.app.resource || {};

    // action 'getFlagInfosByType'
    abp.services.app.resource.getFlagInfosByType = function(type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetFlagInfosByType' + abp.utils.buildQueryString([{ name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setFlagInfosByType'
    abp.services.app.resource.setFlagInfosByType = function(type, flagInfos, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/SetFlagInfosByType' + abp.utils.buildQueryString([{ name: 'type', value: type }]) + '',
        type: 'POST',
        data: JSON.stringify(flagInfos)
      }, ajaxParams));;
    };

    // action 'getBindedFlagNames'
    abp.services.app.resource.getBindedFlagNames = function(id, type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetBindedFlagNames' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBindedFlags'
    abp.services.app.resource.getBindedFlags = function(id, type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetBindedFlags' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setBindedFlags'
    abp.services.app.resource.setBindedFlags = function(id, type, flagNames, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/SetBindedFlags' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'type', value: type }]) + '',
        type: 'POST',
        data: JSON.stringify(flagNames)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.resource.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.resource.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.resource.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.resource.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.resource.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.resource.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.resource.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.resource.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.resource.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.resource.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.resource.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.resource.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'project'
  (function(){

    abp.services.app.project = abp.services.app.project || {};

    // action 'getAll'
    abp.services.app.project.getAll = function(key, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetAll' + abp.utils.buildQueryString([{ name: 'key', value: key }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.project.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.project.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.project.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.project.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.project.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.project.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.project.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.project.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.project.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.project.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.project.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.project.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Project/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'organization'
  (function(){

    abp.services.app.organization = abp.services.app.organization || {};

    // action 'submitOrganization'
    abp.services.app.organization.submitOrganization = function(organizationDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/SubmitOrganization',
        type: 'POST',
        data: JSON.stringify(organizationDto)
      }, ajaxParams));;
    };

    // action 'getTreeJson'
    abp.services.app.organization.getTreeJson = function(parentId, maxLevel, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetTreeJson' + abp.utils.buildQueryString([{ name: 'parentId', value: parentId }, { name: 'maxLevel', value: maxLevel }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getTenantTreeJson'
    abp.services.app.organization.getTenantTreeJson = function(tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetTenantTreeJson' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'moveUserIntoOrganization'
    abp.services.app.organization.moveUserIntoOrganization = function(organizationId, userIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/MoveUserIntoOrganization' + abp.utils.buildQueryString([{ name: 'organizationId', value: organizationId }]) + '',
        type: 'POST',
        data: JSON.stringify(userIds)
      }, ajaxParams));;
    };

    // action 'moveUserOutOrganization'
    abp.services.app.organization.moveUserOutOrganization = function(userIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/MoveUserOutOrganization',
        type: 'POST',
        data: JSON.stringify(userIds)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.organization.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.organization.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.organization.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.organization.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.organization.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.organization.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.organization.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.organization.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.organization.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.organization.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.organization.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.organization.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Organization/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'notice'
  (function(){

    abp.services.app.notice = abp.services.app.notice || {};

    // action 'addNotice'
    abp.services.app.notice.addNotice = function(title, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/AddNotice' + abp.utils.buildQueryString([{ name: 'title', value: title }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setActive'
    abp.services.app.notice.setActive = function(id, isActive, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/SetActive' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'isActive', value: isActive }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.notice.updateField = function(noticeId, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/UpdateField' + abp.utils.buildQueryString([{ name: 'noticeId', value: noticeId }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getActiveNotices'
    abp.services.app.notice.getActiveNotices = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetActiveNotices',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.notice.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.notice.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.notice.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.notice.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.notice.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.notice.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.notice.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.notice.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.notice.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.notice.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.notice.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.notice.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'moduleData'
  (function(){

    abp.services.app.moduleData = abp.services.app.moduleData || {};

    // action 'getPageResult'
    abp.services.app.moduleData.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.moduleData.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.moduleData.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.moduleData.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.moduleData.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.moduleData.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.moduleData.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.moduleData.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.moduleData.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.moduleData.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.moduleData.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.moduleData.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'moduleInfo'
  (function(){

    abp.services.app.moduleInfo = abp.services.app.moduleInfo || {};

    // action 'addModuleInfo'
    abp.services.app.moduleInfo.addModuleInfo = function(moduleName, moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/AddModuleInfo' + abp.utils.buildQueryString([{ name: 'moduleName', value: moduleName }, { name: 'moduleKey', value: moduleKey }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getModuleCountSummary'
    abp.services.app.moduleInfo.getModuleCountSummary = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetModuleCountSummary',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getColumnInfos'
    abp.services.app.moduleInfo.getColumnInfos = function(moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetColumnInfos' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBtnInfos'
    abp.services.app.moduleInfo.getBtnInfos = function(moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetBtnInfos' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'updateColumns'
    abp.services.app.moduleInfo.updateColumns = function(columns, moduleInfoId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/UpdateColumns' + abp.utils.buildQueryString([{ name: 'moduleInfoId', value: moduleInfoId }]) + '',
        type: 'PUT',
        data: JSON.stringify(columns)
      }, ajaxParams));;
    };

    // action 'updateBtns'
    abp.services.app.moduleInfo.updateBtns = function(btns, moduleInfoId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/UpdateBtns' + abp.utils.buildQueryString([{ name: 'moduleInfoId', value: moduleInfoId }]) + '',
        type: 'PUT',
        data: JSON.stringify(btns)
      }, ajaxParams));;
    };

    // action 'getColumnLayData'
    abp.services.app.moduleInfo.getColumnLayData = function(moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetColumnLayData' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.moduleInfo.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'initAllModuleInfo'
    abp.services.app.moduleInfo.initAllModuleInfo = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/InitAllModuleInfo',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'initModuleInfo'
    abp.services.app.moduleInfo.initModuleInfo = function(moduleInfoIds, hard, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/InitModuleInfo' + abp.utils.buildQueryString([{ name: 'hard', value: hard }]) + '',
        type: 'POST',
        data: JSON.stringify(moduleInfoIds)
      }, ajaxParams));;
    };

    // action 'setColumnFixed'
    abp.services.app.moduleInfo.setColumnFixed = function(moduleKey, columnKey, isFixed, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnFixed' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }, { name: 'columnKey', value: columnKey }, { name: 'isFixed', value: isFixed }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setColumnWidth'
    abp.services.app.moduleInfo.setColumnWidth = function(moduleKey, columnKey, width, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnWidth' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }, { name: 'columnKey', value: columnKey }, { name: 'width', value: width }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setColumnVisible'
    abp.services.app.moduleInfo.setColumnVisible = function(moduleKey, columnKey, visible, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnVisible' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }, { name: 'columnKey', value: columnKey }, { name: 'visible', value: visible }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setColumnSort'
    abp.services.app.moduleInfo.setColumnSort = function(moduleKey, columnKeys, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnSort' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'POST',
        data: JSON.stringify(columnKeys)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.moduleInfo.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.moduleInfo.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.moduleInfo.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.moduleInfo.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.moduleInfo.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.moduleInfo.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.moduleInfo.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.moduleInfo.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.moduleInfo.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.moduleInfo.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.moduleInfo.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'menu'
  (function(){

    abp.services.app.menu = abp.services.app.menu || {};

    // action 'getFullTenancyMenuTreeJson'
    abp.services.app.menu.getFullTenancyMenuTreeJson = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetFullTenancyMenuTreeJson',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getMenuTreeJson'
    abp.services.app.menu.getMenuTreeJson = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetMenuTreeJson',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getDefinitionMenu'
    abp.services.app.menu.getDefinitionMenu = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetDefinitionMenu',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUserMenu'
    abp.services.app.menu.getUserMenu = function(userIdentifier, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetUserMenu' + abp.utils.buildQueryString([{ name: 'tenantId', value: userIdentifier.tenantId }, { name: 'userId', value: userIdentifier.userId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getDefaultMenusTreeJson'
    abp.services.app.menu.getDefaultMenusTreeJson = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetDefaultMenusTreeJson',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'saveMenuSetting'
    abp.services.app.menu.saveMenuSetting = function(menuTreeDtoList, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/SaveMenuSetting',
        type: 'POST',
        data: JSON.stringify(menuTreeDtoList)
      }, ajaxParams));;
    };

    // action 'getMenuItemDefinitionByMenuTreeDto'
    abp.services.app.menu.getMenuItemDefinitionByMenuTreeDto = function(menuTreeDtos, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetMenuItemDefinitionByMenuTreeDto' + abp.utils.buildQueryString([{ name: 'menuTreeDtos', value: menuTreeDtos }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'auditLog'
  (function(){

    abp.services.app.auditLog = abp.services.app.auditLog || {};

    // action 'getPageResult'
    abp.services.app.auditLog.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.auditLog.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.auditLog.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.auditLog.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.auditLog.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.auditLog.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.auditLog.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.auditLog.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.auditLog.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.auditLog.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.auditLog.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.auditLog.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'systemLog'
  (function(){

    abp.services.app.systemLog = abp.services.app.systemLog || {};

    // action 'getLogs'
    abp.services.app.systemLog.getLogs = function(type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SystemLog/GetLogs' + abp.utils.buildQueryString([{ name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addClass'
    abp.services.app.systemLog.addClass = function(str, type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SystemLog/AddClass' + abp.utils.buildQueryString([{ name: 'str', value: str }, { name: 'type', value: type }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getTipContent'
    abp.services.app.systemLog.getTipContent = function(url, type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SystemLog/GetTipContent' + abp.utils.buildQueryString([{ name: 'url', value: url }, { name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'userLoginAttempts'
  (function(){

    abp.services.app.userLoginAttempts = abp.services.app.userLoginAttempts || {};

    // action 'getPageResult'
    abp.services.app.userLoginAttempts.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.userLoginAttempts.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.userLoginAttempts.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.userLoginAttempts.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.userLoginAttempts.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.userLoginAttempts.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.userLoginAttempts.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.userLoginAttempts.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.userLoginAttempts.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.userLoginAttempts.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.userLoginAttempts.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.userLoginAttempts.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'language'
  (function(){

    abp.services.app.language = abp.services.app.language || {};

    // action 'addText'
    abp.services.app.language.addText = function(text, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/AddText' + abp.utils.buildQueryString([{ name: 'text', value: text }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.language.updateField = function(id, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/UpdateField' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.language.get = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/Get',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.language.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.language.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.language.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.language.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.language.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.language.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.language.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.language.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.language.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.language.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.language.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.language.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'import'
  (function(){

    abp.services.app.import = abp.services.app.import || {};

    // action 'doImport'
    abp.services.app.import.doImport = function(importDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Import/DoImport',
        type: 'POST',
        data: JSON.stringify(importDto)
      }, ajaxParams));;
    };

    // action 'readFromExcel'
    abp.services.app.import.readFromExcel = function(fileId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Import/ReadFromExcel' + abp.utils.buildQueryString([{ name: 'fileId', value: fileId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'cRRSheet'
  (function(){

    abp.services.app.cRRSheet = abp.services.app.cRRSheet || {};

    // action 'getPageResult'
    abp.services.app.cRRSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.cRRSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.cRRSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.cRRSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.cRRSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.cRRSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.cRRSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.cRRSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.cRRSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.cRRSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.cRRSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.cRRSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/CRRSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'flowSheetModuleAppServiceBase'
  (function(){

    abp.services.app.flowSheetModuleAppServiceBase = abp.services.app.flowSheetModuleAppServiceBase || {};

    // action 'getPageResult'
    abp.services.app.flowSheetModuleAppServiceBase.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.flowSheetModuleAppServiceBase.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.flowSheetModuleAppServiceBase.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.flowSheetModuleAppServiceBase.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.flowSheetModuleAppServiceBase.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.flowSheetModuleAppServiceBase.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.flowSheetModuleAppServiceBase.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.flowSheetModuleAppServiceBase.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.flowSheetModuleAppServiceBase.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.flowSheetModuleAppServiceBase.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.flowSheetModuleAppServiceBase.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.flowSheetModuleAppServiceBase.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FlowSheetModuleAppServiceBase/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'iALSheet'
  (function(){

    abp.services.app.iALSheet = abp.services.app.iALSheet || {};

    // action 'getPageResult'
    abp.services.app.iALSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.iALSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.iALSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.iALSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.iALSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.iALSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.iALSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.iALSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.iALSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.iALSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.iALSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.iALSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IALSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'iASSheet'
  (function(){

    abp.services.app.iASSheet = abp.services.app.iASSheet || {};

    // action 'getPageResult'
    abp.services.app.iASSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.iASSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.iASSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.iASSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.iASSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.iASSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.iASSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.iASSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.iASSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.iASSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.iASSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.iASSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IASSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'iBKSheet'
  (function(){

    abp.services.app.iBKSheet = abp.services.app.iBKSheet || {};

    // action 'getPageResult'
    abp.services.app.iBKSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.iBKSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.iBKSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.iBKSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.iBKSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.iBKSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.iBKSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.iBKSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.iBKSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.iBKSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.iBKSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.iBKSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/IBKSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'iCHSheet'
  (function(){

    abp.services.app.iCHSheet = abp.services.app.iCHSheet || {};

    // action 'getPageResult'
    abp.services.app.iCHSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.iCHSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.iCHSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.iCHSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.iCHSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.iCHSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.iCHSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.iCHSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.iCHSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.iCHSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.iCHSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.iCHSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ICHSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'oPYSheet'
  (function(){

    abp.services.app.oPYSheet = abp.services.app.oPYSheet || {};

    // action 'getPageResult'
    abp.services.app.oPYSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.oPYSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.oPYSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.oPYSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.oPYSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.oPYSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.oPYSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.oPYSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.oPYSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.oPYSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.oPYSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.oPYSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OPYSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'oSKSheet'
  (function(){

    abp.services.app.oSKSheet = abp.services.app.oSKSheet || {};

    // action 'getPageResult'
    abp.services.app.oSKSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.oSKSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.oSKSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.oSKSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.oSKSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.oSKSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.oSKSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.oSKSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.oSKSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.oSKSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.oSKSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.oSKSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/OSKSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'pPYSheet'
  (function(){

    abp.services.app.pPYSheet = abp.services.app.pPYSheet || {};

    // action 'getPageResult'
    abp.services.app.pPYSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.pPYSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.pPYSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.pPYSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.pPYSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.pPYSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.pPYSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.pPYSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.pPYSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.pPYSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.pPYSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.pPYSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PPYSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'pRHSheet'
  (function(){

    abp.services.app.pRHSheet = abp.services.app.pRHSheet || {};

    // action 'getPageResult'
    abp.services.app.pRHSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.pRHSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.pRHSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.pRHSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.pRHSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.pRHSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.pRHSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.pRHSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.pRHSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.pRHSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.pRHSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.pRHSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRHSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'pRRSheet'
  (function(){

    abp.services.app.pRRSheet = abp.services.app.pRRSheet || {};

    // action 'getPageResult'
    abp.services.app.pRRSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.pRRSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.pRRSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.pRRSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.pRRSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.pRRSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.pRRSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.pRRSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.pRRSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.pRRSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.pRRSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.pRRSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PRRSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'pSTSheet'
  (function(){

    abp.services.app.pSTSheet = abp.services.app.pSTSheet || {};

    // action 'getPageResult'
    abp.services.app.pSTSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.pSTSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.pSTSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.pSTSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.pSTSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.pSTSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.pSTSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.pSTSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.pSTSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.pSTSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.pSTSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.pSTSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PSTSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sCKSheet'
  (function(){

    abp.services.app.sCKSheet = abp.services.app.sCKSheet || {};

    // action 'getPageResult'
    abp.services.app.sCKSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sCKSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sCKSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sCKSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sCKSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sCKSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sCKSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sCKSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sCKSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sCKSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sCKSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sCKSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SCKSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sDDSheet'
  (function(){

    abp.services.app.sDDSheet = abp.services.app.sDDSheet || {};

    // action 'getPageResult'
    abp.services.app.sDDSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sDDSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sDDSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sDDSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sDDSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sDDSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sDDSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sDDSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sDDSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sDDSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sDDSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sDDSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDDSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sDRSheet'
  (function(){

    abp.services.app.sDRSheet = abp.services.app.sDRSheet || {};

    // action 'verify'
    abp.services.app.sDRSheet.verify = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/Verify',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'cancel'
    abp.services.app.sDRSheet.cancel = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/Cancel',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.sDRSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sDRSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sDRSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sDRSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sDRSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sDRSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sDRSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sDRSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sDRSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sDRSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sDRSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sDRSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sDRSend'
  (function(){

    abp.services.app.sDRSend = abp.services.app.sDRSend || {};

    // action 'verify'
    abp.services.app.sDRSend.verify = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/Verify',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'cancel'
    abp.services.app.sDRSend.cancel = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/Cancel',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.sDRSend.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sDRSend.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sDRSend.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sDRSend.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sDRSend.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sDRSend.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sDRSend.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sDRSend.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sDRSend.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sDRSend.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sDRSend.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sDRSend.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRSend/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sDRBack'
  (function(){

    abp.services.app.sDRBack = abp.services.app.sDRBack || {};

    // action 'verify'
    abp.services.app.sDRBack.verify = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/Verify',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'cancel'
    abp.services.app.sDRBack.cancel = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/Cancel',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.sDRBack.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sDRBack.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sDRBack.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sDRBack.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sDRBack.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sDRBack.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sDRBack.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sDRBack.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sDRBack.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sDRBack.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sDRBack.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sDRBack.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRBack/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sDRVerify'
  (function(){

    abp.services.app.sDRVerify = abp.services.app.sDRVerify || {};

    // action 'verify'
    abp.services.app.sDRVerify.verify = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/Verify',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'cancel'
    abp.services.app.sDRVerify.cancel = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/Cancel',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.sDRVerify.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sDRVerify.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sDRVerify.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sDRVerify.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sDRVerify.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sDRVerify.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sDRVerify.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sDRVerify.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sDRVerify.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sDRVerify.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sDRVerify.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sDRVerify.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SDRVerify/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sRJSheet'
  (function(){

    abp.services.app.sRJSheet = abp.services.app.sRJSheet || {};

    // action 'getPageResult'
    abp.services.app.sRJSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sRJSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sRJSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sRJSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sRJSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sRJSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sRJSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sRJSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sRJSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sRJSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sRJSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sRJSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SRJSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'sSKSheet'
  (function(){

    abp.services.app.sSKSheet = abp.services.app.sSKSheet || {};

    // action 'getPageResult'
    abp.services.app.sSKSheet.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.sSKSheet.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.sSKSheet.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.sSKSheet.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.sSKSheet.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.sSKSheet.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.sSKSheet.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.sSKSheet.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.sSKSheet.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.sSKSheet.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.sSKSheet.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.sSKSheet.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SSKSheet/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'feeAccountHistory'
  (function(){

    abp.services.app.feeAccountHistory = abp.services.app.feeAccountHistory || {};

    // action 'getPageResult'
    abp.services.app.feeAccountHistory.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.feeAccountHistory.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.feeAccountHistory.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.feeAccountHistory.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.feeAccountHistory.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.feeAccountHistory.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.feeAccountHistory.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.feeAccountHistory.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.feeAccountHistory.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.feeAccountHistory.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.feeAccountHistory.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.feeAccountHistory.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccountHistory/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'invoice'
  (function(){

    abp.services.app.invoice = abp.services.app.invoice || {};

    // action 'submit'
    abp.services.app.invoice.submit = function(invoiceSubmitDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/Submit',
        type: 'POST',
        data: JSON.stringify(invoiceSubmitDto)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.invoice.update = function(invoiceDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/Update',
        type: 'PUT',
        data: JSON.stringify(invoiceDto)
      }, ajaxParams));;
    };

    // action 'doImport'
    abp.services.app.invoice.doImport = function(filePath, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/DoImport' + abp.utils.buildQueryString([{ name: 'filePath', value: filePath }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getCountSummary'
    abp.services.app.invoice.getCountSummary = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetCountSummary',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'verify'
    abp.services.app.invoice.verify = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/Verify',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'close'
    abp.services.app.invoice.close = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/Close',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.invoice.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.invoice.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.invoice.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.invoice.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.invoice.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.invoice.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.invoice.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.invoice.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.invoice.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.invoice.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.invoice.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.invoice.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Invoice/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'unitFee'
  (function(){

    abp.services.app.unitFee = abp.services.app.unitFee || {};

    // action 'getUnitFeeSummary'
    abp.services.app.unitFee.getUnitFeeSummary = function(unitId, unitNature, endDate, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetUnitFeeSummary' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'unitNature', value: unitNature }, { name: 'endDate', value: endDate }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.unitFee.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.unitFee.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.unitFee.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.unitFee.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.unitFee.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.unitFee.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.unitFee.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.unitFee.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.unitFee.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.unitFee.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.unitFee.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.unitFee.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFee/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'unitFeeHistory'
  (function(){

    abp.services.app.unitFeeHistory = abp.services.app.unitFeeHistory || {};

    // action 'getPageResult'
    abp.services.app.unitFeeHistory.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.unitFeeHistory.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.unitFeeHistory.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.unitFeeHistory.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.unitFeeHistory.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.unitFeeHistory.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.unitFeeHistory.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.unitFeeHistory.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.unitFeeHistory.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.unitFeeHistory.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.unitFeeHistory.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.unitFeeHistory.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UnitFeeHistory/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'voucher'
  (function(){

    abp.services.app.voucher = abp.services.app.voucher || {};

    // action 'submit'
    abp.services.app.voucher.submit = function(voucherDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/Submit',
        type: 'POST',
        data: JSON.stringify(voucherDto)
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.voucher.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setVoucherStatus'
    abp.services.app.voucher.setVoucherStatus = function(id, voucherStatus, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/SetVoucherStatus' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'POST',
        data: JSON.stringify(voucherStatus)
      }, ajaxParams));;
    };

    // action 'setRelSheet'
    abp.services.app.voucher.setRelSheet = function(id, sheetSN, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/SetRelSheet' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'sheetSN', value: sheetSN }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.voucher.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.voucher.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.voucher.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.voucher.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.voucher.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.voucher.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.voucher.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.voucher.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.voucher.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.voucher.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.voucher.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Voucher/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'feeAccount'
  (function(){

    abp.services.app.feeAccount = abp.services.app.feeAccount || {};

    // action 'getPageResult'
    abp.services.app.feeAccount.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.feeAccount.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getNormalAccounts'
    abp.services.app.feeAccount.getNormalAccounts = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetNormalAccounts',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllAccounts'
    abp.services.app.feeAccount.getAllAccounts = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetAllAccounts',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSummary'
    abp.services.app.feeAccount.getSummary = function(startDate, endDate, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetSummary' + abp.utils.buildQueryString([{ name: 'startDate', value: startDate }, { name: 'endDate', value: endDate }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.feeAccount.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.feeAccount.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.feeAccount.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.feeAccount.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.feeAccount.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.feeAccount.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.feeAccount.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.feeAccount.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.feeAccount.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.feeAccount.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeAccount/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'feeCheck'
  (function(){

    abp.services.app.feeCheck = abp.services.app.feeCheck || {};

    // action 'getAllAvailable'
    abp.services.app.feeCheck.getAllAvailable = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetAllAvailable',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.feeCheck.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.feeCheck.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.feeCheck.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.feeCheck.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.feeCheck.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.feeCheck.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.feeCheck.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.feeCheck.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.feeCheck.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.feeCheck.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.feeCheck.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.feeCheck.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/FeeCheck/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'material'
  (function(){

    abp.services.app.material = abp.services.app.material || {};

    // action 'getStoreMaterialCount'
    abp.services.app.material.getStoreMaterialCount = function(materialId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetStoreMaterialCount' + abp.utils.buildQueryString([{ name: 'materialId', value: materialId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUnitMaterialInfos'
    abp.services.app.material.getUnitMaterialInfos = function(unitId, materialIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetUnitMaterialInfos' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'materialIds', value: materialIds }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getStoreMaterialInfos'
    abp.services.app.material.getStoreMaterialInfos = function(storeId, materialIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetStoreMaterialInfos' + abp.utils.buildQueryString([{ name: 'storeId', value: storeId }, { name: 'materialIds', value: materialIds }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.material.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.material.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.material.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.material.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.material.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.material.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.material.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.material.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.material.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.material.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.material.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.material.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Material/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialBuy'
  (function(){

    abp.services.app.materialBuy = abp.services.app.materialBuy || {};

    // action 'getUnitBuyedMaterial'
    abp.services.app.materialBuy.getUnitBuyedMaterial = function(unitId, storeId, startDate, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetUnitBuyedMaterial' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'storeId', value: storeId }, { name: 'startDate', value: startDate }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'checkCode'
    abp.services.app.materialBuy.checkCode = function(featureCode, codeNumberStr, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/CheckCode' + abp.utils.buildQueryString([{ name: 'featureCode', value: featureCode }, { name: 'codeNumberStr', value: codeNumberStr }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.materialBuy.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialBuy.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialBuy.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialBuy.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialBuy.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialBuy.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialBuy.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialBuy.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialBuy.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialBuy.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialBuy.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialBuy.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuy/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialBuyBack'
  (function(){

    abp.services.app.materialBuyBack = abp.services.app.materialBuyBack || {};

    // action 'getPageResult'
    abp.services.app.materialBuyBack.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialBuyBack.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialBuyBack.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialBuyBack.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialBuyBack.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialBuyBack.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialBuyBack.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialBuyBack.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialBuyBack.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialBuyBack.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialBuyBack.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialBuyBack.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuyBack/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialBuySummary'
  (function(){

    abp.services.app.materialBuySummary = abp.services.app.materialBuySummary || {};

    // action 'getPageResult'
    abp.services.app.materialBuySummary.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialBuySummary.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialBuySummary.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialBuySummary.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialBuySummary.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialBuySummary.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialBuySummary.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialBuySummary.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialBuySummary.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialBuySummary.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialBuySummary.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialBuySummary.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialBuySummary/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialDIY'
  (function(){

    abp.services.app.materialDIY = abp.services.app.materialDIY || {};

    // action 'getMaterialDiyInfo'
    abp.services.app.materialDIY.getMaterialDiyInfo = function(materialId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetMaterialDiyInfo' + abp.utils.buildQueryString([{ name: 'materialId', value: materialId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setMaterialDiyInfo'
    abp.services.app.materialDIY.setMaterialDiyInfo = function(materialDIYSubmitDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/SetMaterialDiyInfo',
        type: 'POST',
        data: JSON.stringify(materialDIYSubmitDto)
      }, ajaxParams));;
    };

    // action 'getStoreMaterialCount'
    abp.services.app.materialDIY.getStoreMaterialCount = function(materialId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetStoreMaterialCount' + abp.utils.buildQueryString([{ name: 'materialId', value: materialId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUnitMaterialInfos'
    abp.services.app.materialDIY.getUnitMaterialInfos = function(unitId, materialIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetUnitMaterialInfos' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'materialIds', value: materialIds }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getStoreMaterialInfos'
    abp.services.app.materialDIY.getStoreMaterialInfos = function(storeId, materialIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetStoreMaterialInfos' + abp.utils.buildQueryString([{ name: 'storeId', value: storeId }, { name: 'materialIds', value: materialIds }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.materialDIY.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialDIY.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialDIY.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialDIY.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialDIY.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialDIY.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialDIY.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialDIY.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialDIY.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialDIY.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialDIY.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialDIY.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialDIY/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialSell'
  (function(){

    abp.services.app.materialSell = abp.services.app.materialSell || {};

    // action 'syncCart'
    abp.services.app.materialSell.syncCart = function(unitId, materialNature, materialCartUpdateDtos, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/SyncCart' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'materialNature', value: materialNature }]) + '',
        type: 'POST',
        data: JSON.stringify(materialCartUpdateDtos)
      }, ajaxParams));;
    };

    // action 'getCartInfo'
    abp.services.app.materialSell.getCartInfo = function(unitId, materialNature, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetCartInfo' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'materialNature', value: materialNature }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUnitSellMaterialForOut'
    abp.services.app.materialSell.getUnitSellMaterialForOut = function(unitId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetUnitSellMaterialForOut' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUnitSellMaterialForBack'
    abp.services.app.materialSell.getUnitSellMaterialForBack = function(unitId, startDate, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetUnitSellMaterialForBack' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'startDate', value: startDate }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'checkSellMaterialInfos'
    abp.services.app.materialSell.checkSellMaterialInfos = function(checkSellMaterialInfoDtos, unitId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/CheckSellMaterialInfos' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }]) + '',
        type: 'POST',
        data: JSON.stringify(checkSellMaterialInfoDtos)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.materialSell.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialSell.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialSell.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialSell.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialSell.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialSell.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialSell.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialSell.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialSell.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialSell.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialSell.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialSell.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSell/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialSellBack'
  (function(){

    abp.services.app.materialSellBack = abp.services.app.materialSellBack || {};

    // action 'getPageResult'
    abp.services.app.materialSellBack.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialSellBack.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialSellBack.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialSellBack.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialSellBack.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialSellBack.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialSellBack.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialSellBack.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialSellBack.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialSellBack.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialSellBack.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialSellBack.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellBack/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialSellOut'
  (function(){

    abp.services.app.materialSellOut = abp.services.app.materialSellOut || {};

    // action 'getPageResult'
    abp.services.app.materialSellOut.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialSellOut.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialSellOut.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialSellOut.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialSellOut.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialSellOut.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialSellOut.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialSellOut.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialSellOut.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialSellOut.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialSellOut.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialSellOut.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOut/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialSellOutSummary'
  (function(){

    abp.services.app.materialSellOutSummary = abp.services.app.materialSellOutSummary || {};

    // action 'getPageResult'
    abp.services.app.materialSellOutSummary.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialSellOutSummary.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialSellOutSummary.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialSellOutSummary.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialSellOutSummary.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialSellOutSummary.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialSellOutSummary.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialSellOutSummary.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialSellOutSummary.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialSellOutSummary.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialSellOutSummary.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialSellOutSummary.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellOutSummary/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialSellSummary'
  (function(){

    abp.services.app.materialSellSummary = abp.services.app.materialSellSummary || {};

    // action 'getPageResult'
    abp.services.app.materialSellSummary.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialSellSummary.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialSellSummary.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialSellSummary.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialSellSummary.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialSellSummary.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialSellSummary.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialSellSummary.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialSellSummary.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialSellSummary.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialSellSummary.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialSellSummary.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialSellSummary/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'materialUnitDiscount'
  (function(){

    abp.services.app.materialUnitDiscount = abp.services.app.materialUnitDiscount || {};

    // action 'getUnitMaterialDiscountInfo'
    abp.services.app.materialUnitDiscount.getUnitMaterialDiscountInfo = function(unitMaterialDiscountSearchDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetUnitMaterialDiscountInfo' + abp.utils.buildQueryString([{ name: 'materialId', value: unitMaterialDiscountSearchDto.materialId }, { name: 'unitId', value: unitMaterialDiscountSearchDto.unitId }, { name: 'unitRanks', value: unitMaterialDiscountSearchDto.unitRanks }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setMaterialUnitDiscountInfo'
    abp.services.app.materialUnitDiscount.setMaterialUnitDiscountInfo = function(materialId, unitMaterialDiscountSubmitDtos, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/SetMaterialUnitDiscountInfo' + abp.utils.buildQueryString([{ name: 'materialId', value: materialId }]) + '',
        type: 'POST',
        data: JSON.stringify(unitMaterialDiscountSubmitDtos)
      }, ajaxParams));;
    };

    // action 'getStoreMaterialCount'
    abp.services.app.materialUnitDiscount.getStoreMaterialCount = function(materialId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetStoreMaterialCount' + abp.utils.buildQueryString([{ name: 'materialId', value: materialId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUnitMaterialInfos'
    abp.services.app.materialUnitDiscount.getUnitMaterialInfos = function(unitId, materialIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetUnitMaterialInfos' + abp.utils.buildQueryString([{ name: 'unitId', value: unitId }, { name: 'materialIds', value: materialIds }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getStoreMaterialInfos'
    abp.services.app.materialUnitDiscount.getStoreMaterialInfos = function(storeId, materialIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetStoreMaterialInfos' + abp.utils.buildQueryString([{ name: 'storeId', value: storeId }, { name: 'materialIds', value: materialIds }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.materialUnitDiscount.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.materialUnitDiscount.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.materialUnitDiscount.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.materialUnitDiscount.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.materialUnitDiscount.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.materialUnitDiscount.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.materialUnitDiscount.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.materialUnitDiscount.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.materialUnitDiscount.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.materialUnitDiscount.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.materialUnitDiscount.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.materialUnitDiscount.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MaterialUnitDiscount/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'store'
  (function(){

    abp.services.app.store = abp.services.app.store || {};

    // action 'getAllStores'
    abp.services.app.store.getAllStores = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetAllStores',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.store.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.store.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.store.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.store.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.store.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.store.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.store.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.store.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.store.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.store.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.store.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.store.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Store/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'storeMaterialHistory'
  (function(){

    abp.services.app.storeMaterialHistory = abp.services.app.storeMaterialHistory || {};

    // action 'getPageResult'
    abp.services.app.storeMaterialHistory.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.storeMaterialHistory.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.storeMaterialHistory.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.storeMaterialHistory.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.storeMaterialHistory.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.storeMaterialHistory.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.storeMaterialHistory.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.storeMaterialHistory.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.storeMaterialHistory.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.storeMaterialHistory.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.storeMaterialHistory.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.storeMaterialHistory.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/StoreMaterialHistory/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'script'
  (function(){

    abp.services.app.script = abp.services.app.script || {};

    // action 'tryCompile'
    abp.services.app.script.tryCompile = function(scriptCompileDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Script/TryCompile',
        type: 'POST',
        data: JSON.stringify(scriptCompileDto)
      }, ajaxParams));;
    };

  })();

  // controller 'dictionary'
  (function(){

    abp.services.app.dictionary = abp.services.app.dictionary || {};

    // action 'getAllKeys'
    abp.services.app.dictionary.getAllKeys = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetAllKeysAsync',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'isInInnerDics'
    abp.services.app.dictionary.isInInnerDics = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/IsInInnerDics' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'addDictionary'
    abp.services.app.dictionary.addDictionary = function(name, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/AddDictionary' + abp.utils.buildQueryString([{ name: 'name', value: name }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateDictionary'
    abp.services.app.dictionary.updateDictionary = function(id, dicContent, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/UpdateDictionary' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'dicContent', value: dicContent }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.dictionary.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.dictionary.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.dictionary.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.dictionary.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.dictionary.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.dictionary.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.dictionary.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.dictionary.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.dictionary.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.dictionary.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.dictionary.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.dictionary.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'baseType'
  (function(){

    abp.services.app.baseType = abp.services.app.baseType || {};

    // action 'getTypesByDiscriminator'
    abp.services.app.baseType.getTypesByDiscriminator = function(discriminator, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetTypesByDiscriminator' + abp.utils.buildQueryString([{ name: 'discriminator', value: discriminator }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBaseType'
    abp.services.app.baseType.getBaseType = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetBaseType' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'submit'
    abp.services.app.baseType.submit = function(baseTypeDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/Submit',
        type: 'POST',
        data: JSON.stringify(baseTypeDto)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.baseType.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.baseType.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.baseType.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.baseType.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.baseType.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.baseType.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.baseType.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.baseType.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.baseType.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.baseType.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.baseType.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.baseType.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseType/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'baseTree'
  (function(){

    abp.services.app.baseTree = abp.services.app.baseTree || {};

    // action 'getTreeJson'
    abp.services.app.baseTree.getTreeJson = function(discriminator, parentId, maxLevel, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetTreeJson' + abp.utils.buildQueryString([{ name: 'discriminator', value: discriminator }, { name: 'parentId', value: parentId }, { name: 'maxLevel', value: maxLevel }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBaseTree'
    abp.services.app.baseTree.getBaseTree = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetBaseTree' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'submit'
    abp.services.app.baseTree.submit = function(baseTreeDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/Submit',
        type: 'POST',
        data: JSON.stringify(baseTreeDto)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.baseTree.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.baseTree.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.baseTree.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.baseTree.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.baseTree.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.baseTree.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.baseTree.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.baseTree.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.baseTree.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.baseTree.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.baseTree.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.baseTree.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BaseTree/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'edition'
  (function(){

    abp.services.app.edition = abp.services.app.edition || {};

    // action 'getAll'
    abp.services.app.edition.getAll = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetAll',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addEdition'
    abp.services.app.edition.addEdition = function(text, key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/AddEdition' + abp.utils.buildQueryString([{ name: 'text', value: text }, { name: 'key', value: key }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.edition.updateField = function(editionId, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/UpdateField' + abp.utils.buildQueryString([{ name: 'editionId', value: editionId }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.edition.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.edition.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'searchKeyDic', value: request.searchKeyDic }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.edition.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.edition.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.edition.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.edition.getGroupedField = function(requestGroupFieldPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetGroupedField' + abp.utils.buildQueryString([{ name: 'field', value: requestGroupFieldPageDto.field }, { name: 'query', value: requestGroupFieldPageDto.query }, { name: 'limit', value: requestGroupFieldPageDto.limit }, { name: 'page', value: requestGroupFieldPageDto.page }, { name: 'where', value: requestGroupFieldPageDto.where }, { name: 'tableFilter', value: requestGroupFieldPageDto.tableFilter }, { name: 'filterField', value: requestGroupFieldPageDto.filterField }, { name: 'filterKey', value: requestGroupFieldPageDto.filterKey }, { name: 'filterColumns', value: requestGroupFieldPageDto.filterColumns }, { name: 'searchCondition', value: requestGroupFieldPageDto.searchCondition }, { name: 'filterSos', value: requestGroupFieldPageDto.filterSos }, { name: 'searchKeys', value: requestGroupFieldPageDto.searchKeys }, { name: 'keyword', value: requestGroupFieldPageDto.keyword }, { name: 'orderField', value: requestGroupFieldPageDto.orderField }, { name: 'orderType', value: requestGroupFieldPageDto.orderType }, { name: 'searchKeyDic', value: requestGroupFieldPageDto.searchKeyDic }, { name: 'moduleKey', value: requestGroupFieldPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllByKeyword'
    abp.services.app.edition.getAllByKeyword = function(keyword, take, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetAllByKeyword' + abp.utils.buildQueryString([{ name: 'keyword', value: keyword }, { name: 'take', value: take }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.edition.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.edition.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.edition.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

    // action 'setPropertyValue'
    abp.services.app.edition.setPropertyValue = function(propertySetDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/SetPropertyValue',
        type: 'POST',
        data: JSON.stringify(propertySetDto)
      }, ajaxParams));;
    };

    // action 'getPropertyValue'
    abp.services.app.edition.getPropertyValue = function(primaries, propertyName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetPropertyValue' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }, { name: 'propertyName', value: propertyName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'feature'
  (function(){

    abp.services.app.feature = abp.services.app.feature || {};

    // action 'submitFeature'
    abp.services.app.feature.submitFeature = function(featureSubmitDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Feature/SubmitFeature',
        type: 'POST',
        data: JSON.stringify(featureSubmitDto)
      }, ajaxParams));;
    };

    // action 'resetTenantFeature'
    abp.services.app.feature.resetTenantFeature = function(tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Feature/ResetTenantFeature' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

})();
